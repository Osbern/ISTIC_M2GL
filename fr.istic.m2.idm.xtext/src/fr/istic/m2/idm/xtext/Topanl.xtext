// automatically generated by Xtext
grammar fr.istic.m2.idm.xtext.Topanl with org.eclipse.xtext.common.Terminals

import "platform:/resource/fr.istic.m2.idm.CellAutomata/model/Topology.ecore"
//import "platform:/resource/fr.istic.m2.idm.CellAutomata/model/DataType.ecore" as DataType
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Geometry returns Geometry:
	'Geometry'
	'{'
		('nDim' '=' nDim=Integer)?
		('isCircular' '=' isCircular=Bool)?
		'dimensions' '=' '(' dimensions+=[Dimension] ( "," dimensions+=[Dimension])* ')' 
		('neighbors' '=' '(' neighbors+=[Neighbor] ( "," neighbors+=[Neighbor])* ')' )?
	'}';



Dimension returns Dimension:
	{Dimension}
	'Dimension'
	'{'
		('size' '=' size=Integer)?
	'}';

Neighbor returns Neighbor:
	{Neighbor}
	'Neighbor'
	'{'
		('coord' '=' '{' coord+=Integer ( "," coord+=Integer)* '}' )?
	'}';

Integer returns ecore::EInt://DataType::Integer:
	'Integer' /* TODO: implement this rule and an appropriate IValueConverter */;

Bool returns ecore::EBoolean://DataType::Bool:
	'Bool' /* TODO: implement this rule and an appropriate IValueConverter */;
